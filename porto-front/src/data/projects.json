[
  {
    "id": 1,
    "slug": "booknest-marketplace",
    "title": "BookNest – Online Book Marketplace",
    "documentation": "/assets/pdfs/BTD.pdf",
    "majorTechStack": ["MERN", "JWT", "Razorpay"],
    "img": "/assets/images/booknest/booknest-1.png",
    "main_img": "/assets/images/booknest/booknest-1.png",
    "repo": "",
    "live": "https://booknest-master.vercel.app/",
    "sectionTitles": {
      "features": "Key Features",
      "techStack": "Technology Stack",
      "security": "Security Enhancements",
      "scalability": "Scalability",
      "community": "Community Features",
      "paymentFeatures": "Payment Options",
      "team": "Team Members"
    },
    "shortDescription": "A specialized, community-driven platform for buying, selling, and managing books.",
    "fullDescription": "BookNest is a specialized and intelligent online platform built exclusively for book enthusiasts. Unlike generic marketplaces, BookNest focuses entirely on the lifecycle of books — from discovery and purchase to review, resale, and donation. Users can browse books using advanced search filters such as title, edition, condition, ISBN, or price. They can organize their collections in a virtual bookshelf, track orders in real time, and securely buy or sell with multiple payment options.Sellers benefit from robust inventory management tools, bulk uploads, and visibility within a trusted community. Buyers can read peer reviews, engage in discussions, and share favorites with one-click social sharing. Features like loyalty points, real-time tracking, e-book downloads, and multi-role accounts (admin, seller, buyer) make the platform comprehensive and scalable.With performance-optimized UI, secure JWT-based sessions, Razorpay payments, and integration of Mongoose, Multer, EasyInvoice, and Toastify, BookNest stands out as a full-stack, user-centric solution for modern digital reading and commerce.",
    "features": [
      "Advanced book search with edition, ISBN, and condition filters",
      "Community forums, reviews, and social sharing",
      "Virtual bookshelves and wishlist management",
      "Multi-role authentication (customer, seller, admin)",
      "Bulk book listing upload for sellers",
      "Secure multi-method payments via Razorpay",
      "Real-time order tracking with invoice generation",
      "Loyalty points and reward system",
      "Support for book donation and reselling",
      "E-book listing and download support"
    ],
    "techStack": [
      "React.js",
      "Redux Toolkit",
      "Node.js",
      "Express.js",
      "MongoDB",
      "Mongoose",
      "JWT",
      "Razorpay",
      "Nodemailer",
      "Multer",
      "Axios",
      "Toastify",
      "EasyInvoice"
    ],
    "architecture": "Modular Monolithic with Frontend-Backend Separation",
    "security": [
      "Multi-factor authentication",
      "JWT-based secure login",
      "Password encryption with bcrypt",
      "Environment-secured secrets via dotenv"
    ],
    "scalability": "Optimized for large inventory management and data handling with MongoDB and Mongoose",
    "community": {
      "reviewsEnabled": true,
      "socialSharing": true,
      "forums": true,
      "loyaltySystem": true
    },
    "paymentFeatures": [
      "UPI (Google Pay, PhonePe, etc.)",
      "Credit/Debit Cards",
      "Digital Wallets",
      "Real-time payment status with Razorpay"
    ],
    "ebookSupport": true,
    "team": [
      {
        "name": "Pappu Kumar",
        "role": "Lead Developer",
        "github": "https://github.com/pappukumarme9999",
        "linkedin": "https://www.linkedin.com/in/pappu-kumar-gupta/"
      }
    ]
  },
  {
    "id": 2,
    "slug": "production-grade-portfolio",
    "title": "Production-Grade Portfolio Platform",
    "repo": "",
    "live": "https://portfolio-frontend-cyan-gamma.vercel.app/",
    "documentation": "/assets/pdfs/portfolio.pdf",
    "majorTechStack": ["MERN", "JWT", "Razorpay"],
    "duration": "April 2025 – Present",
    "img": "/assets/images/portfolio/portfolio-1.png",
    "main_img": "/assets/images/portfolio/portfolio.png",
    "sectionTitles": {
      "features": "Platform Features",
      "techStack": "Tech Stack Used",
      "security": "Security Highlights",
      "scalability": "Scalability",
      "team": "Development Team"
    },
    "shortDescription": "A full-stack, client-customizable portfolio platform.",
    "fullDescription": "This platform is a modular, secure, and production-ready portfolio system designed for real-world personal branding. It includes a client-facing React frontend to showcase projects and skills, and an admin dashboard for easy content management, even by non-technical users. Built using Spring Boot, PostgreSQL, and Supabase Storage, the backend offers robust REST APIs secured by JWT authentication. The system supports deployment to any VPS with SSL, custom domains, and email integration. Fully customizable for developers, freelancers, or business professionals, the platform is mobile-responsive and built with modern UX principles.",
    "features": [
      "Secure and user-friendly admin panel",
      "Modular frontend and backend structure",
      "Real-time content management without redeploy",
      "Deployment-ready with SSL, domain, and CI/CD support",
      "Supabase storage integration for image and file uploads",
      "Multi-section portfolio (about, projects, contact, etc.)",
      "Mobile responsive and professionally themed UI",
      "Admin authentication and protected dashboard",
      "Customizable for multiple user personas (developer, designer, freelancer)"
    ],
    "techStack": [
      "React 19",
      "Vite",
      "React Router DOM v7",
      "SCSS + Bootstrap 5",
      "Framer Motion",
      "Java 17",
      "Spring Boot 3",
      "PostgreSQL (Supabase)",
      "Spring Security",
      "Supabase Storage",
      "MapStruct",
      "Flyway",
      "Hibernate",
      "JWT",
      "Axios",
      "i18next"
    ],
    "architecture": "Modular Monolith with RESTful API integration between client, admin, and backend services",
    "security": [
      "JWT-based authentication with Spring Security",
      "Environment-secured secrets using `.env` and config maps",
      "Role-based access control for admin panel",
      "Rate limiting and audit logging for sensitive actions"
    ],
    "scalability": "Backend designed to support multi-user dashboards and extendable REST API for blogs, testimonials, and contact forms",
    "community": {
      "reviewsEnabled": false,
      "socialSharing": true,
      "forums": false,
      "loyaltySystem": false
    },
    "paymentFeatures": [],
    "ebookSupport": false,
    "team": [
      {
        "name": "Pappu Kumar",
        "role": "Full Stack Engineer",
        "github": "https://github.com/pappukumarme9999",
        "linkedin": "https://www.linkedin.com/in/pappu-kumar-gupta/"
      }
    ]
  },
  {
    "id": 3,
    "slug": "Personal_Finance_Tracker",
    "title": "Personal Finance Tracker",
    "documentation": "/assets/pdfs/Personal_Finance_Tracker.pdf",
    "majorTechStack": ["React", "JWT", "Springboot"],
    "img": "/assets/images/im2.jpg",
    "main_img": "/assets/images/im2.jpg",
    "repo": "",
    "live": "https://finance-tracker-react-five.vercel.app/",
    "shortDescription": "A web application to help users manage finances."
  }
]
